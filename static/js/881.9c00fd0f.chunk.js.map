{"version":3,"file":"static/js/881.9c00fd0f.chunk.js","mappings":"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","sources":["components/API/API.jsx","components/HomeList/HomeList.styled.jsx","components/HomeList/HomeList.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: 'ed7e21d2b78dbd5c81e3f302822c687c',\n  },\n});\n\nexport const getTrending = async () => {\n  try {\n    const response = await instance.get(`trending/movie/day`);\n    return response.data;\n  } catch (error) {\n    console.log(`${error.name} : ${error.message}`);\n  }\n};\n\nexport const getSearchMovies = async query => {\n  try {\n    const response = await instance.get(`search/movie`, {\n      params: {\n        query: query,\n      },\n    });\n    if (response.data.results.length === 0) {\n      alert(`Немає фільма з назвою ${query}!`);\n    }\n    return response.data;\n  } catch (error) {\n    console.log(`${error.name} : ${error.message}`);\n  }\n};\n\nexport const getMovieDetails = async id => {\n  try {\n    const response = await instance.get(`movie/${id}`);\n    return response.data;\n  } catch (error) {\n    console.log(`${error.name} : ${error.message}`);\n  }\n};\n\nexport const getMovieCredits = async id => {\n  try {\n    const response = await instance.get(`movie/${id}/credits`);\n    return response.data;\n  } catch (error) {\n    console.log(`${error.name} : ${error.message}`);\n  }\n};\n\nexport const getMovieReviews = async id => {\n  try {\n    const response = await axios.get(`movie/${id}/reviews`);\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.log(`${error.name} : ${error.message}`);\n  }\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  grid-template-rows: auto;\n  justify-content: center;\n  flex-wrap: wrap;\n  /* border: 2px solid #f99e8e; */\n  gap: 30px;\n`;\n\nexport const Image = styled.img`\n  width: 270px;\n  height: 350px;\n`;\nexport const Item = styled.li`\n  width: 270px;\n  margin: 10px;\n\n  text-decoration: none;\n  border: 2px solid #f99e8e;\n  border-radius: 2%;\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n  text-decoration: none;\n  color: black;\n  font-style: italic;\n`;\n\nexport const Text = styled.p`\n  margin: 3px;\n  font-style: italic;\n\n  /* text-align: center; */\n  padding-left: 10px;\n  margin-bottom: 10px;\n\n  color: black;\n`;\n","import { useLocation, Link } from 'react-router-dom';\nimport { Image, List, Item, Title, Text } from './HomeList.styled';\n\nexport const HomeList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {films.map(film => (\n        <Item key={film.id}>\n          <Link\n            to={`/movies/${film.id}`}\n            state={{ from: location }}\n            style={{ textDecoration: 'none' }}\n          >\n            {film.poster_path ? (\n              <Image\n                src={`https://image.tmdb.org/t/p/w500${film.poster_path}`}\n                alt={film.title}\n              ></Image>\n            ) : (\n              <Image src=\"https://i.gifer.com/C7Gr.gif\" alt=\"error\"></Image>\n            )}\n            <Title>{film.title}</Title>\n            <Text> Rating: {film.vote_average}</Text>\n            <Text>Popular: {film.popularity}%</Text>\n            <Text> Relase year: {film.release_date}</Text>\n          </Link>\n        </Item>\n      ))}\n    </List>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Movies_form__4ow+Z\",\"input\":\"Movies_input__KrUqs\",\"button\":\"Movies_button__GcIka\"};","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchMovies } from 'components/API/API';\nimport { HomeList } from 'components/HomeList/HomeList';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const [films, setFilms] = useState([]);\n  const [query, setQuery] = useState('');\n  const [queryParams, setQueryParams] = useSearchParams();\n  const searchQuery = queryParams.get('query') ?? '';\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!query) {\n      alert('Please enter movie');\n      return;\n    }\n\n    setQueryParams({ query });\n    getSearchMovies(query).then(res => setFilms(res.results));\n    setQuery('');\n  };\n\n  useEffect(() => {\n    if (searchQuery) {\n      getSearchMovies(searchQuery).then(res => setFilms(res.results));\n    }\n  }, [searchQuery]);\n\n  return (\n    <>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <input\n          className={css.input}\n          type=\"text\"\n          onChange={handleChange}\n          name=\"searchQuery\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie...\"\n          value={query}\n        />\n        <button className={css.button}>Find</button>\n      </form>\n      {films.length > 0 ? <HomeList films={films} /> : null}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["instance","axios","baseURL","params","api_key","getTrending","get","response","data","console","log","name","message","getSearchMovies","query","results","length","alert","getMovieDetails","id","getMovieCredits","getMovieReviews","List","styled","Image","Item","Title","Text","HomeList","films","location","useLocation","map","film","to","state","from","style","textDecoration","poster_path","src","alt","title","vote_average","popularity","release_date","useState","setFilms","setQuery","useSearchParams","queryParams","setQueryParams","searchQuery","useEffect","then","res","className","css","onSubmit","e","preventDefault","type","onChange","target","value","autoComplete","autoFocus","placeholder"],"sourceRoot":""}